{"remainingRequest":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\src\\components\\tree\\TreeItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\src\\components\\tree\\TreeItem.vue","mtime":1567262205444},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\itcast-work\\\\heima-jee131\\\\\\u8BFE\\u524D\\u8D44\\u6599\\\\\\u9759\\u6001\\u539F\\u578B\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nexport default {\n  name: \"tree-item\",\n  props: {\n    model: Object,\n    url: String,\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    nodes: Object,\n    parentState: Boolean\n  },\n  created: function created() {},\n  data: function data() {\n    return {\n      c1: '',\n      c2: '',\n      c3: '',\n      isSelected: false,\n      open: false,\n      beginEdit: false\n    };\n  },\n  watch: {\n    parentState: function parentState(val) {\n      if (!val) {\n        this.open = val;\n      }\n    }\n  },\n  computed: {\n    isFolder: function isFolder() {\n      return this.model.children && this.model.children.length > 0;\n    }\n  },\n  methods: {\n    toggle: function toggle() {\n      var _this = this;\n\n      // 将其它被选中项取消选中\n      this.nodes.selected.isSelected = false; // 当前项被选中\n\n      this.isSelected = true; // 保存当前选中项\n\n      this.nodes.selected = this; // 客户自己的点击事件回调\n\n      this.handleClick(this.model); // 判断是否为顶级节点，顶级节点需要记录和替换\n\n      if (this.model.parentId == 0) {\n        // 判断打开节点是否是自己\n        if (this.nodes.opened && this != this.nodes.opened) {\n          // 不是，则关闭原来的节点\n          this.nodes.opened.open = false;\n        } // 将自己记录为打开的节点\n\n\n        this.nodes.opened = this;\n      } // 切换开闭状态\n\n\n      this.open = !this.open; // 如果已经是叶子节点,或者自己是关闭的，或者自己已经有儿子了，结束\n\n      if (!this.model.isParent || this.isFolder || !this.open) {\n        return;\n      } // 展开后查询子节点\n\n\n      this.$http.get(this.url, {\n        params: {\n          pid: this.model.id\n        }\n      }).then(function (resp) {\n        Vue.set(_this.model, 'children', resp.data); // 封装当前节点的路径\n\n        _this.model.children.forEach(function (n) {\n          n['path'] = [];\n\n          _this.model.path.forEach(function (p) {\n            return n['path'].push(p);\n          });\n\n          n['path'].push(n.name);\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    addChild: function () {\n      var _addChild = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var resp, child;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.model.isParent) {\n                  _context.next = 4;\n                  break;\n                }\n\n                //Vue.set(this.model, 'children', [child]);\n                this.model.isParent = true; // this.open = true;\n                //this.handleAdd(child);\n\n                _context.next = 9;\n                break;\n\n              case 4:\n                if (this.isFolder) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.$http.get(this.url, {\n                  params: {\n                    pid: this.model.id\n                  }\n                });\n\n              case 7:\n                resp = _context.sent;\n                Vue.set(this.model, 'children', resp.data); // if (!this.isFolder) {\n                //   this.$http.get(this.url, {params: {pid: this.model.id}}).then(resp => {\n                //     Vue.set(this.model, 'children', resp.data);\n                //this.model.children.push(child);\n                // this.open = true;\n                //this.handleAdd(child);\n                // });\n                // }\n\n              case 9:\n                this.open = true; // setTimeout(() => {\n\n                console.info(this.model);\n                console.info(this.model.children);\n                child = {\n                  id: 0,\n                  name: '新的节点',\n                  parentId: this.model.id,\n                  isParent: false,\n                  parentName: this.model.name,\n                  sort: this.model.children ? this.model.children.length + 1 : 1\n                };\n                this.handleAdd(child); // },2000);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addChild() {\n        return _addChild.apply(this, arguments);\n      }\n\n      return addChild;\n    }(),\n    getModel: function () {\n      var _getModel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(url, pid) {\n        var resp;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.$http.get(url, {\n                  params: {\n                    pid: pid\n                  }\n                });\n\n              case 3:\n                resp = _context2.sent;\n                Vue.set(this.model, 'children', resp.data);\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getModel(_x, _x2) {\n        return _getModel.apply(this, arguments);\n      }\n\n      return getModel;\n    }(),\n    deleteChild: function deleteChild() {\n      var _this2 = this;\n\n      this.$message.confirm('此操作将永久删除数据，是否继续?', '提示', {\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this2.handleDelete(_this2.model.id);\n      }).catch(function () {\n        _this2.$message.info('已取消删除');\n      });\n    },\n    editChild: function editChild() {\n      // this.beginEdit = true;\n      // this.$nextTick(() => this.$refs[this.model.id].focus());\n      this.handleEdit(this.model.id, this.model.name);\n    },\n    afterEdit: function afterEdit() {\n      if (this.beginEdit) {\n        this.beginEdit = false;\n        this.handleEdit(this.model.id, this.model.name);\n      }\n    },\n    handleAdd: function handleAdd(node) {\n      this.$emit(\"handleAdd\", node);\n    },\n    handleDelete: function handleDelete(id) {\n      this.$emit(\"handleDelete\", id);\n    },\n    handleEdit: function handleEdit(id, name) {\n      this.$emit(\"handleEdit\", id, name);\n    },\n    handleClick: function handleClick(node) {\n      this.$emit(\"handleClick\", node);\n    }\n  }\n};",{"version":3,"sources":["TreeItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-list-tile\n      @click=\"toggle\" class=\"level1 py-0 my-0\" :class=\"{'selected':isSelected}\">\n      <v-list-tile-avatar class=\"px-1\">\n        <v-icon v-if=\"model.isParent\">{{open ? 'mdi-folder-open' : 'mdi-folder'}}</v-icon>\n        <v-icon v-if=\"!model.isParent\">mdi-file-outline</v-icon>\n      </v-list-tile-avatar>\n      <v-list-tile-content>\n        <v-list-tile-title v-show=\"!beginEdit\">\n          <span >{{model.name}}</span>\n        </v-list-tile-title>\n        <!--<input v-show=\"beginEdit\" @click.stop=\"\" :ref=\"model.id\" v-model=\"model.name\"\n               @blur=\"afterEdit\" @keydown.enter=\"afterEdit\"/>-->\n      </v-list-tile-content>\n      <v-list-tile-action v-if=\"isEdit\">\n        <v-btn icon @mouseover=\"c1='primary'\" @mouseout=\"c1=''\" :color=\"c1\" @click.stop=\"addChild\">\n          <i class=\"el-icon-plus\"/>\n        </v-btn>\n      </v-list-tile-action>\n      <v-list-tile-action v-if=\"isEdit\">\n        <v-btn icon @mouseover=\"c2='success'\" @mouseout=\"c2=''\" :color=\"c2\" @click.stop=\"editChild\">\n          <i class=\"el-icon-edit\"/>\n        </v-btn>\n      </v-list-tile-action>\n      <v-list-tile-action v-if=\"isEdit\">\n        <v-btn icon @mouseover=\"c3='error'\" @mouseout=\"c3=''\" :color=\"c3\" @click.stop=\"deleteChild\">\n          <i class=\"el-icon-delete\"/>\n        </v-btn>\n      </v-list-tile-action>\n    </v-list-tile>\n\n    <v-list v-if=\"isFolder\" v-show=\"open\" class=\"ml-4 pt-0 pb-0\" dense transition=\"scale-transition\">\n      <tree-item\n        class=\"item\"\n        v-for=\"(model, index) in model.children\"\n        :key=\"index\"\n        :model=\"model\"\n        :url=\"url\"\n        :isEdit=\"isEdit\"\n        :nodes=\"nodes\"\n        :parentState=\"open\"\n        @handleAdd=\"handleAdd\"\n        @handleEdit=\"handleEdit\"\n        @handleDelete=\"handleDelete\"\n        @handleClick=\"handleClick\"\n      >\n      </tree-item>\n    </v-list>\n  </div>\n</template>\n\n<script>\n  import Vue from 'vue'\n\n  export default {\n    name: \"tree-item\",\n    props: {\n      model: Object,\n      url: String,\n      isEdit: {\n        type: Boolean,\n        default: false\n      },\n      nodes: Object,\n      parentState:Boolean\n    },\n    created() {\n    },\n    data: function () {\n      return {\n        c1: '',\n        c2: '',\n        c3: '',\n        isSelected: false,\n        open:false,\n        beginEdit:false\n      }\n    },\n    watch:{\n      parentState(val){\n        if(!val){\n          this.open = val;\n        }\n      }\n    },\n    computed: {\n      isFolder: function () {\n        return this.model.children &&\n          this.model.children.length > 0\n      }\n    },\n    methods: {\n      toggle: function () {\n        // 将其它被选中项取消选中\n        this.nodes.selected.isSelected = false;\n        // 当前项被选中\n        this.isSelected = true;\n        // 保存当前选中项\n        this.nodes.selected = this\n\n        // 客户自己的点击事件回调\n        this.handleClick(this.model);\n\n        // 判断是否为顶级节点，顶级节点需要记录和替换\n        if(this.model.parentId == 0){\n          // 判断打开节点是否是自己\n          if(this.nodes.opened && this != this.nodes.opened){\n            // 不是，则关闭原来的节点\n            this.nodes.opened.open = false;\n          }\n          // 将自己记录为打开的节点\n          this.nodes.opened = this;\n        }\n        // 切换开闭状态\n        this.open = !this.open;\n        // 如果已经是叶子节点,或者自己是关闭的，或者自己已经有儿子了，结束\n        if (!this.model.isParent || this.isFolder || !this.open) {\n          return;\n        }\n        // 展开后查询子节点\n        this.$http.get(this.url, {params: {pid: this.model.id}})\n          .then(resp => {\n          Vue.set(this.model, 'children', resp.data);\n          // 封装当前节点的路径\n          this.model.children.forEach(n => {\n            n['path'] = [];\n            this.model.path.forEach(p => n['path'].push(p));\n            n['path'].push(n.name);\n          });\n        }).catch( e => {\n          console.log(e);\n        });\n      },\n      async addChild() {\n        // console.info('model='+this.model);\n        // console.info('childre'+this.model.children);\n        // let child = {\n        //   id: 0,\n        //   name: '新的节点',\n        //   parentId: this.model.id,\n        //   isParent: false,\n        //   parentName:this.model.name,\n        //   sort:this.model.children? this.model.children.length + 1:1\n        // }\n        if (!this.model.isParent) {\n          //Vue.set(this.model, 'children', [child]);\n          this.model.isParent = true;\n          // this.open = true;\n          //this.handleAdd(child);\n        } else if (!this.isFolder){\n          const resp = await this.$http.get(this.url, {params: {pid: this.model.id}});\n          Vue.set(this.model, 'children', resp.data);\n          // if (!this.isFolder) {\n          //   this.$http.get(this.url, {params: {pid: this.model.id}}).then(resp => {\n          //     Vue.set(this.model, 'children', resp.data);\n              //this.model.children.push(child);\n              // this.open = true;\n              //this.handleAdd(child);\n            // });\n          // }\n        }\n        this.open = true;\n        // setTimeout(() => {\n          console.info(this.model);\n          console.info(this.model.children);\n          let child = {\n            id: 0,\n            name: '新的节点',\n            parentId: this.model.id,\n            isParent: false,\n            parentName:this.model.name,\n            sort:this.model.children? this.model.children.length + 1:1\n          }\n          this.handleAdd(child);\n        // },2000);\n\n      },\n      async getModel(url,pid) {\n        try {\n          const resp = await this.$http.get(url, {params: {pid: pid}});\n          Vue.set(this.model, 'children', resp.data);\n        } catch (error) {\n        }\n      },\n      deleteChild: function () {\n        this.$message.confirm('此操作将永久删除数据，是否继续?', '提示', {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.handleDelete(this.model.id);\n        }).catch(()=>{\n          this.$message.info('已取消删除');\n        })\n\n      },\n      editChild() {\n        // this.beginEdit = true;\n        // this.$nextTick(() => this.$refs[this.model.id].focus());\n        this.handleEdit(this.model.id, this.model.name);\n      },\n      afterEdit() {\n        if (this.beginEdit) {\n          this.beginEdit = false;\n          this.handleEdit(this.model.id, this.model.name);\n        }\n      },\n      handleAdd(node) {\n        this.$emit(\"handleAdd\", node);\n      },\n      handleDelete(id) {\n        this.$emit(\"handleDelete\", id);\n      },\n      handleEdit(id, name) {\n        this.$emit(\"handleEdit\", id, name)\n      },\n      handleClick(node) {\n        this.$emit(\"handleClick\", node);\n      }\n    }\n  }\n\n</script>\n\n<style scoped>\n  .level1 {\n    height: 40px;\n  }\n\n  .selected {\n    background-color: rgba(105,184,249,0.75);\n  }\n\n  .material-icons{\n    line-height:1.7\n  }\n</style>\n"],"sourceRoot":"src/components/tree"}]}