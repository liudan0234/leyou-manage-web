{"remainingRequest":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\itheima\\leyou\\leyou-manage-web\\src\\views\\item\\SeckillForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\itheima\\leyou\\leyou-manage-web\\src\\views\\item\\SeckillForm.vue","mtime":1578814705725},{"path":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\itheima\\leyou\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"C:\\\\itheima\\\\leyou\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"C:\\\\itheima\\\\leyou\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Object$assign from \"C:\\\\itheima\\\\leyou\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectWithoutProperties from \"C:\\\\itheima\\\\leyou\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\itheima\\\\leyou\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"seckill-form\",\n  props: {\n    oldGoods: {\n      type: Object\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    step: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      valid: false,\n      goods: {\n        categories: [],\n        // 商品分类信息\n        brandId: 0,\n        // 品牌id信息\n        spuId: 0,\n        skuId: 0,\n        name: \"\"\n      },\n      date: new Date().toISOString().substr(0, 10),\n      menu2: false,\n      miaoshatiems: ['10:00:00', '12:00:00', '14:00:00', '16:00:00', '18:00:00', '20:00:00'],\n      brandOptions: [],\n      // 品牌列表\n      goodsOptions: [],\n      //商品列表\n      skuOptions: [],\n      //sku列表\n      mstime: \"10:00:00\"\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      // 表单校验。\n      if (!this.$refs.basic.validate) {\n        this.$message.error(\"请先完成表单内容！\");\n      } // 先处理goods，用解构表达式接收,除了categories外，都接收到goodsParams中\n\n\n      var _this$goods = this.goods,\n          _this$goods$categorie = _slicedToArray(_this$goods.categories, 3),\n          cid1 = _this$goods$categorie[0].id,\n          cid2 = _this$goods$categorie[1].id,\n          cid3 = _this$goods$categorie[2].id,\n          goodsParams = _objectWithoutProperties(_this$goods, [\"categories\"]);\n\n      _Object$assign(goodsParams, {\n        cid1: cid1,\n        cid2: cid2,\n        cid3: cid3 // 商品分类\n\n      });\n\n      goodsParams.oldPrice = this.$format(goodsParams.oldPrice); // 价格需要格式化\n\n      goodsParams.costPrice = this.$format(goodsParams.costPrice); // 价格需要格式化\n\n      goodsParams.beginTime = new Date(this.date + \" \" + this.mstime);\n      goodsParams.endTime = null;\n      this.$http({\n        method: this.isEdit ? \"put\" : \"post\",\n        url: \"/manageSec/\",\n        data: goodsParams\n      }).then(function () {\n        // 成功，关闭窗口\n        _this.$emit(\"close\"); // 提示成功\n\n\n        _this.$message.success(\"保存成功了\");\n      }).catch(function () {\n        _this.$message.error(\"保存失败！\");\n      });\n    }\n  },\n  watch: {\n    oldGoods: {\n      deep: true,\n      handler: function handler(val) {\n        if (!this.isEdit) {\n          _Object$assign(this.goods, {\n            categories: null,\n            // 商品分类信息\n            brandId: 0,\n            // 品牌id信息\n            name: \"\",\n            // 标题\n            subTitle: \"\" // 子标题\n\n          });\n        } else {\n          this.goods = Object.deepCopy(val);\n          this.date = val.secKillDate;\n          this.mstime = val.beginTime.substring(11, 19);\n          console.info(this.mstime); // 先得到分类名称\n\n          var names = val.categoryName.split(\"/\");\n          delete this.goods.categoryName;\n          delete this.goods.brandName;\n          delete this.goods.createTime; // 组织商品分类数据\n\n          this.goods.categories = [{\n            id: val.cid1,\n            name: names[0]\n          }, {\n            id: val.cid2,\n            name: names[1]\n          }, {\n            id: val.cid3,\n            name: names[2]\n          }];\n          this.goods.id = val.id;\n          this.goods.oldPrice = this.$format(val.oldPrice); // 价格需要格式化\n\n          this.goods.costPrice = this.$format(val.costPrice); // 价格需要格式化\n        }\n      }\n    },\n    \"goods.categories\": {\n      deep: true,\n      handler: function handler(val) {\n        var _this2 = this;\n\n        // 判断商品分类是否存在，存在才查询\n        if (val && val.length > 0) {\n          //把品牌列表设置为空\n          this.brandOptions = []; // 根据分类查询品牌\n\n          this.$http.get(\"/item/brand/of/category?id=\" + this.goods.categories[2].id).then(function (_ref) {\n            var data = _ref.data;\n            _this2.brandOptions = data;\n          });\n        }\n      }\n    },\n    \"goods.brandId\": {\n      handler: function handler(val) {\n        var _this3 = this;\n\n        if (val && val != 0) {\n          //把商品列表设置为空\n          this.goodsOptions = []; // 根据分类查询品牌\n\n          this.$http.get(\"/item/spu/for/brand?id=\" + this.goods.brandId + \"&cid=\" + this.goods.categories[2].id).then(function (_ref2) {\n            var data = _ref2.data;\n            _this3.goodsOptions = data;\n          });\n        }\n      }\n    },\n    \"goods.spuId\": {\n      handler: function handler(val) {\n        var _this4 = this;\n\n        if (val && val != 0) {\n          this.goodsOptions.forEach(function (spu) {\n            if (_this4.goods.spuId == spu.id) {\n              _this4.goods.name = spu.name;\n            }\n          });\n          this.$http.get(\"/item/sku/of/spu?id=\" + this.goods.spuId).then(function (_ref3) {\n            var data = _ref3.data;\n            _this4.skuOptions = data;\n          });\n        }\n      }\n    },\n    \"goods.skuId\": {\n      handler: function handler(val) {\n        var _this5 = this;\n\n        if (val && val != 0) {\n          this.skuOptions.forEach(function (sku) {\n            if (sku.id == _this5.goods.skuId) {\n              _this5.goods.title = sku.title;\n              _this5.goods.oldPrice = _this5.$format(sku.price);\n              _this5.goods.skuPic = sku.images ? sku.images : \"\";\n            }\n          });\n        }\n      }\n    }\n  },\n  computed: {\n    skus: function skus() {\n      var _this6 = this;\n\n      // 过滤掉用户没有填写数据的规格参数\n      var arr = this.specialSpecs.filter(function (s) {\n        return s.options.length > 0;\n      }); // 通过reduce进行累加笛卡尔积\n\n      return arr.reduce(function (last, spec, index) {\n        var result = [];\n        last.forEach(function (o) {\n          spec.options.forEach(function (option, i) {\n            var obj = JSON.parse(_JSON$stringify(o));\n            obj[spec.name] = {\n              v: option,\n              id: spec.id\n            };\n            obj.indexes = (obj.indexes || '') + '_' + i;\n\n            if (index === arr.length - 1) {\n              obj.indexes = obj.indexes.substring(1); // 如果发现是最后一组，则添加价格、库存等字段\n\n              _Object$assign(obj, {\n                price: 0,\n                stock: 0,\n                enable: false,\n                images: []\n              });\n\n              if (_this6.isEdit) {\n                // 如果是编辑，则回填sku信息\n                var sku = _this6.goods.skus.get(obj.indexes);\n\n                if (sku != null) {\n                  var price = sku.price,\n                      stock = sku.stock,\n                      enable = sku.enable,\n                      images = sku.images;\n\n                  _Object$assign(obj, {\n                    price: _this6.$format(price),\n                    stock: stock,\n                    enable: enable,\n                    images: images ? images.split(\",\") : []\n                  });\n                }\n              }\n            }\n\n            result.push(obj);\n          });\n        });\n        return result;\n      }, [{}]);\n    },\n    headers: function headers() {\n      if (this.skus.length <= 0) {\n        return [];\n      }\n\n      var headers = [];\n\n      _Object$keys(this.skus[0]).forEach(function (k) {\n        var value = k;\n\n        if (k === \"price\") {\n          // enable，表头要翻译成“价格”\n          k = \"价格\";\n        } else if (k === \"stock\") {\n          // enable，表头要翻译成“库存”\n          k = \"库存\";\n        } else if (k === \"enable\") {\n          // enable，表头要翻译成“是否启用”\n          k = \"是否启用\";\n        } else if (k === \"images\" || k === 'indexes') {\n          // 图片和索引不在表格中展示\n          return;\n        }\n\n        headers.push({\n          text: k,\n          align: \"center\",\n          sortable: false,\n          value: value\n        });\n      });\n\n      return headers;\n    }\n  }\n};",{"version":3,"sources":["SeckillForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-stepper v-model=\"step\">\r\n    <v-stepper-header>\r\n      <v-stepper-step :complete=\"step > 1\" step=\"1\">选择商品</v-stepper-step>\r\n      <v-divider/>\r\n      <v-stepper-step step=\"2\">秒杀信息</v-stepper-step>\r\n    </v-stepper-header>\r\n    <v-stepper-items>\r\n      <!--1、选择商品-->\r\n      <v-stepper-content step=\"1\">\r\n        <v-flex class=\"xs10 mx-auto px-3\">\r\n          <v-form v-model=\"valid\" ref=\"basic\">\r\n            <v-layout row>\r\n              <v-flex xs5>\r\n                <!--商品分类-->\r\n                <v-cascader\r\n                  url=\"/item/category/of/parent\"\r\n                  required\r\n                  showAllLevels\r\n                  v-model=\"goods.categories\"\r\n                  label=\"请选择商品分类\"/>\r\n              </v-flex>\r\n              <v-spacer/>\r\n              <v-flex xs5>\r\n                <!--品牌-->\r\n                <v-autocomplete\r\n                  :items=\"brandOptions\"\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  label=\"所属品牌\"\r\n                  v-model=\"goods.brandId\"\r\n                  required\r\n                  autocomplete\r\n                  clearable\r\n                  dense chips\r\n                  :rules=\"[v => !!v || '品牌不能为空']\"\r\n                >\r\n                  <template slot=\"selection\" slot-scope=\"data\">\r\n                    <v-chip small>{{ data.item.name}}</v-chip>\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-flex>\r\n            </v-layout>\r\n            <v-layout>\r\n              <v-flex xs5>\r\n                <!--商品 spu-->\r\n                <v-autocomplete\r\n                        :items=\"goodsOptions\"\r\n                        item-text=\"name\"\r\n                        item-value=\"id\"\r\n                        label=\"选择商品\"\r\n                        v-model=\"goods.spuId\"\r\n                        required\r\n                        autocomplete\r\n                        clearable\r\n                        dense chips\r\n                        :rules=\"[v => !!v || '商品不能为空']\"\r\n                >\r\n                  <template slot=\"selection\" slot-scope=\"data\">\r\n                    <v-chip small>{{ data.item.name}}</v-chip>\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-flex>\r\n              <v-spacer/>\r\n              <v-flex xs5>\r\n                <!--商品 sku-->\r\n                <v-autocomplete\r\n                        :items=\"skuOptions\"\r\n                        item-text=\"title\"\r\n                        item-value=\"id\"\r\n                        label=\"选择SKU\"\r\n                        v-model=\"goods.skuId\"\r\n                        required\r\n                        autocomplete\r\n                        clearable\r\n                        dense chips\r\n                        :rules=\"[v => !!v || 'SKU不能为空']\"\r\n                >\r\n                  <template slot=\"selection\" slot-scope=\"data\">\r\n                    <v-chip small>{{ data.item.title}}</v-chip>\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-flex>\r\n            </v-layout>\r\n            <v-flex>\r\n              <v-text-field label=\"商品标题\" v-model=\"goods.title\" :counter=\"200\" required :rules=\"[v => !!v || '商品标题不能为空']\" hide-details/>\r\n              <v-text-field label=\"商品卖点\" v-model=\"goods.subTitle\" :counter=\"200\" hide-details/>\r\n              <!--图片上传组件-->\r\n\r\n                <v-card class=\"elevation-2 flex xs11 mx-auto my-2\">\r\n                  <img width=\"200px\" :src=\"goods.skuPic\" alt=\"\">\r\n                </v-card>\r\n\r\n\r\n            </v-flex>\r\n          </v-form>\r\n        </v-flex>\r\n      </v-stepper-content>\r\n      <!--2、商品描述-->\r\n      <v-stepper-content step=\"2\">\r\n        <v-layout>\r\n          <v-flex xs5>\r\n              <v-menu\r\n                      v-model=\"menu2\"\r\n                      :close-on-content-click=\"false\"\r\n                      :nudge-right=\"40\"\r\n                      transition=\"scale-transition\"\r\n                      offset-y\r\n                      min-width=\"290px\"\r\n\r\n              >\r\n                <template v-slot:activator=\"{ on }\">\r\n                  <v-text-field\r\n                          v-model=\"date\"\r\n                          label=\"请选择秒杀日期\"\r\n                          prepend-icon=\"event\"\r\n                          readonly\r\n                          v-on=\"on\"\r\n                          :rules=\"[v => !!v || '请选择秒杀日期']\"\r\n                  ></v-text-field>\r\n                </template>\r\n                <v-date-picker v-model=\"date\" @input=\"menu2 = false\" locale=\"zh-cn\"></v-date-picker>\r\n              </v-menu>\r\n          </v-flex>\r\n          <v-spacer/>\r\n          <v-flex xs5>\r\n              <v-select\r\n                      :items=\"miaoshatiems\"\r\n                      v-model=\"mstime\"\r\n                      label=\"秒杀开始时间\"\r\n                      dense\r\n                      outlined\r\n                      :rules=\"[v => !!v || '请选择秒杀时间']\"\r\n              ></v-select>\r\n          </v-flex>\r\n        </v-layout>\r\n        <v-flex>\r\n        <v-text-field label=\"商品数量\" v-model=\"goods.num\"   hide-details/>\r\n        <v-text-field label=\"商品原价\" v-model=\"goods.oldPrice\"  hide-details/>\r\n        <v-text-field label=\"秒杀价格\" v-model=\"goods.costPrice\"   hide-details/>\r\n        </v-flex>\r\n        <!--提交按钮-->\r\n        <v-flex xs3 offset-xs9>\r\n\r\n          <v-btn color=\"info\" @click=\"submit\">保存秒杀信息</v-btn>\r\n        </v-flex>\r\n      </v-stepper-content>\r\n    </v-stepper-items>\r\n  </v-stepper>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"seckill-form\",\r\n  props: {\r\n    oldGoods: {\r\n      type: Object\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    step: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valid:false,\r\n      goods: {\r\n        categories: [], // 商品分类信息\r\n        brandId: 0, // 品牌id信息\r\n        spuId:0,\r\n        skuId:0,\r\n        name:\"\"\r\n      },\r\n      date: new Date().toISOString().substr(0, 10),\r\n      menu2: false,\r\n      miaoshatiems: ['10:00:00', '12:00:00', '14:00:00', '16:00:00', '18:00:00', '20:00:00'],\r\n      brandOptions: [], // 品牌列表\r\n      goodsOptions: [],//商品列表\r\n      skuOptions:[],//sku列表\r\n      mstime:\"10:00:00\"\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      // 表单校验。\r\n      if(!this.$refs.basic.validate){\r\n        this.$message.error(\"请先完成表单内容！\");\r\n      }\r\n      // 先处理goods，用解构表达式接收,除了categories外，都接收到goodsParams中\r\n      const {\r\n        categories: [{ id: cid1 }, { id: cid2 }, { id: cid3 }],\r\n        ...goodsParams\r\n      } = this.goods;\r\n      Object.assign(goodsParams, {\r\n        cid1,\r\n        cid2,\r\n        cid3, // 商品分类\r\n      });\r\n      goodsParams.oldPrice=this.$format(goodsParams.oldPrice); // 价格需要格式化\r\n      goodsParams.costPrice=this.$format(goodsParams.costPrice); // 价格需要格式化\r\n      goodsParams.beginTime = new Date(this.date+\" \"+this.mstime);\r\n      goodsParams.endTime = null;\r\n      this.$http({\r\n        method: this.isEdit ? \"put\" : \"post\",\r\n        url: \"/manageSec/\",\r\n        data: goodsParams\r\n      })\r\n        .then(() => {\r\n          // 成功，关闭窗口\r\n          this.$emit(\"close\");\r\n          // 提示成功\r\n          this.$message.success(\"保存成功了\");\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(\"保存失败！\");\r\n        });\r\n    }\r\n  },\r\n  watch: {\r\n    oldGoods: {\r\n      deep: true,\r\n      handler(val) {\r\n        if (!this.isEdit) {\r\n          Object.assign(this.goods, {\r\n            categories: null, // 商品分类信息\r\n            brandId: 0, // 品牌id信息\r\n            name: \"\", // 标题\r\n            subTitle: \"\", // 子标题\r\n          });\r\n        } else {\r\n          this.goods = Object.deepCopy(val);\r\n          this.date = val.secKillDate;\r\n          this.mstime = val.beginTime.substring(11,19);\r\n          console.info(this.mstime);\r\n          // 先得到分类名称\r\n          const names = val.categoryName.split(\"/\");\r\n          delete this.goods.categoryName;\r\n          delete this.goods.brandName;\r\n          delete this.goods.createTime;\r\n          // 组织商品分类数据\r\n          this.goods.categories = [\r\n            { id: val.cid1, name: names[0] },\r\n            { id: val.cid2, name: names[1] },\r\n            { id: val.cid3, name: names[2] }\r\n          ];\r\n          this.goods.id = val.id;\r\n          this.goods.oldPrice =this.$format(val.oldPrice); // 价格需要格式化\r\n          this.goods.costPrice=this.$format(val.costPrice); // 价格需要格式化\r\n        }\r\n      }\r\n    },\r\n    \"goods.categories\": {\r\n      deep: true,\r\n      handler(val) {\r\n        // 判断商品分类是否存在，存在才查询\r\n        if (val && val.length > 0) {\r\n          //把品牌列表设置为空\r\n          this.brandOptions = [];\r\n          // 根据分类查询品牌\r\n          this.$http\r\n            .get(\"/item/brand/of/category?id=\" + this.goods.categories[2].id)\r\n            .then(({ data }) => {\r\n              this.brandOptions = data;\r\n            });\r\n        }\r\n      }\r\n    },\r\n    \"goods.brandId\":{\r\n      handler(val){\r\n        if (val && val!= 0) {\r\n          //把商品列表设置为空\r\n          this.goodsOptions = [];\r\n          // 根据分类查询品牌\r\n          this.$http\r\n            .get(\"/item/spu/for/brand?id=\" + this.goods.brandId+\"&cid=\"+this.goods.categories[2].id)\r\n            .then(({ data }) => {\r\n              this.goodsOptions = data;\r\n            });\r\n        }\r\n      }\r\n    },\r\n    \"goods.spuId\":{\r\n      handler(val){\r\n        if (val && val!= 0) {\r\n          this.goodsOptions.forEach(spu =>{\r\n            if(this.goods.spuId == spu.id){\r\n              this.goods.name = spu.name;\r\n            }\r\n          });\r\n          this.$http\r\n              .get(\"/item/sku/of/spu?id=\" + this.goods.spuId)\r\n              .then(({ data }) => {\r\n                this.skuOptions = data;\r\n              });\r\n\r\n        }\r\n      }\r\n    },\r\n    \"goods.skuId\":{\r\n      handler(val){\r\n        if (val && val!= 0) {\r\n          this.skuOptions.forEach(sku =>{\r\n            if(sku.id == this.goods.skuId){\r\n              this.goods.title = sku.title;\r\n              this.goods.oldPrice =  this.$format(sku.price);\r\n              this.goods.skuPic = sku.images?sku.images:\"\";\r\n\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    skus() {\r\n      // 过滤掉用户没有填写数据的规格参数\r\n      const arr = this.specialSpecs.filter(s => s.options.length > 0);\r\n      // 通过reduce进行累加笛卡尔积\r\n      return arr.reduce(\r\n        (last, spec, index) => {\r\n          const result = [];\r\n          last.forEach(o => {\r\n            spec.options.forEach((option, i) => {\r\n              const obj = JSON.parse(JSON.stringify(o));\r\n              obj[spec.name] = {v:option, id:spec.id};\r\n              obj.indexes = (obj.indexes || '') + '_' +  i\r\n              if (index === arr.length - 1) {\r\n                obj.indexes = obj.indexes.substring(1);\r\n                // 如果发现是最后一组，则添加价格、库存等字段\r\n                Object.assign(obj, {\r\n                  price: 0,\r\n                  stock: 0,\r\n                  enable: false,\r\n                  images: []\r\n                });\r\n                if (this.isEdit) {\r\n                  // 如果是编辑，则回填sku信息\r\n                  const sku = this.goods.skus.get(obj.indexes);\r\n                  if (sku != null) {\r\n                    const { price, stock, enable, images } = sku;\r\n                    Object.assign(obj, {\r\n                      price: this.$format(price),\r\n                      stock,\r\n                      enable,\r\n                      images: images ? images.split(\",\") : [],\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              result.push(obj);\r\n            });\r\n          });\r\n          return result;\r\n        },\r\n        [{}]\r\n      );\r\n    },\r\n    headers() {\r\n      if (this.skus.length <= 0) {\r\n        return [];\r\n      }\r\n      const headers = [];\r\n      Object.keys(this.skus[0]).forEach(k => {\r\n        let value = k;\r\n        if (k === \"price\") {\r\n          // enable，表头要翻译成“价格”\r\n          k = \"价格\";\r\n        } else if (k === \"stock\") {\r\n          // enable，表头要翻译成“库存”\r\n          k = \"库存\";\r\n        } else if (k === \"enable\") {\r\n          // enable，表头要翻译成“是否启用”\r\n          k = \"是否启用\";\r\n        } else if (k === \"images\" || k === 'indexes') {\r\n          // 图片和索引不在表格中展示\r\n          return;\r\n        }\r\n        headers.push({\r\n          text: k,\r\n          align: \"center\",\r\n          sortable: false,\r\n          value\r\n        });\r\n      });\r\n      return headers;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/item"}]}