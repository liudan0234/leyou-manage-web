{"remainingRequest":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\src\\views\\item\\Seckill.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\src\\views\\item\\Seckill.vue","mtime":1578814504589},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\itcast-work\\heima-jee131\\课前资料\\静态原型\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// 导入自定义的表单组件\nimport SeckillForm from './SeckillForm'\n\nexport default {\n  name: \"seckill\",\n  data() {\n    return {\n      state: 1,\n      search: '', // 搜索过滤字段\n      totalGoods: 0, // 总条数\n      goodsList: [], // 当前页品牌数据\n      loading: true, // 是否在加载中\n      pagination: {}, // 分页信息\n      headers: [\n        {text: 'skuId', align: 'center', sortable: false, value: 'skuId'},\n        {text: '商品名称', align: 'center', sortable: false, value: 'name'},\n        {text: '商品分类', align: 'center', sortable: false, value: 'categoryName'},\n        {text: '品牌', align: 'center', value: 'brandName', sortable: false,},\n        {text: '数量', align: 'center', value: 'num', sortable: false,},\n        {text: '原价(元)', align: 'center', value: 'oldPrice', sortable: false,},\n        {text: '秒杀价(元)', align: 'center', value: 'oldPrice', sortable: false,},\n        {text: '开始时间', align: 'center', value: 'beginTime', sortable: true,},\n        {text: '操作', align: 'center', sortable: false}\n      ],\n      show: false,// 控制对话框的显示\n      oldGoods: {}, // 即将被编辑的商品信息\n      isEdit: false, // 是否是编辑\n      step: 1, // 子组件中的步骤线索引，默认为1\n    }\n  },\n  mounted() { // 渲染后执行\n    // 查询数据\n    this.getDataFromServer();\n  },\n  watch: {\n    pagination: { // 监视pagination属性的变化\n      deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\n      handler() {\n        // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n        this.getDataFromServer();\n      }\n    },\n    state(){\n      this.getDataFromServer();\n    }\n  },\n  methods: {\n    getDataFromServer() { // 从服务的加载数的方法。\n      // 发起请求\n      this.$http.get(\"/manageSec/findSecKillPage\", {\n        params: {\n          key: this.search, // 搜索条件\n          state: this.state === 0 ? null : this.state,\n          page: this.pagination.page,// 当前页\n          rows: this.pagination.rowsPerPage,// 每页大小\n        }\n      }).then(resp => { // 这里使用箭头函数\n        this.goodsList = resp.data.items;\n        this.totalGoods = resp.data.total;\n        // 完成赋值后，把加载状态赋值为false\n        this.loading = false;\n      }).catch(() => {\n        this.goodsList = [];\n        this.totalGoods = 0;\n        // 完成赋值后，把加载状态赋值为false\n        this.loading = false;\n      })\n    },\n    addGoods() {\n      // 修改标记\n      this.isEdit = false;\n      // 控制弹窗可见：\n      this.show = true;\n      // 把oldBrand变为null\n      this.oldGoods = {};\n    },\n    async editSecKill(oldGoods) {\n      // 修改标记\n      this.isEdit = true;\n      // 控制弹窗可见：\n      this.show = true;\n      // 获取要编辑的goods\n      this.oldGoods = oldGoods;\n    },\n    closeWindow() {\n      console.log(1)\n      // 重新加载数据\n      this.getDataFromServer();\n      // 关闭窗口\n      this.show = false;\n      // 将步骤调整到1\n      this.step = 1;\n    },\n    previous() {\n      if (this.step > 1) {\n        this.step--\n      }\n    },\n    next() {\n      if (this.step < 2 && this.$refs.goodsForm.$refs.basic.validate()) {\n        this.step++\n      }\n    }\n  },\n  components: {\n    SeckillForm\n  }\n}\n",{"version":3,"sources":["Seckill.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Seckill.vue","sourceRoot":"src/views/item","sourcesContent":["<template>\n  <v-card>\n    <v-toolbar class=\"elevation-0\">\n      <v-btn color=\"primary\" @click=\"addGoods\">选择秒杀商品</v-btn>\n      <v-spacer/>\n      <v-flex xs5>\n        状态：\n        <v-btn-toggle mandatory v-model.lazy=\"state\">\n          <v-btn>\n            全部\n          </v-btn>\n          <v-btn :value=\"1\">\n            未开始\n          </v-btn>\n          <v-btn :value=\"2\">\n            进行中\n          </v-btn>\n          <v-btn :value=\"3\">\n            已结束\n          </v-btn>\n        </v-btn-toggle>\n      </v-flex>\n      <v-flex xs3>\n        <v-text-field\n            append-icon=\"search\"\n            label=\"搜索\"\n            single-line\n            hide-details\n            v-model=\"search\"\n            @click:append=\"getDataFromServer\"\n        />\n      </v-flex>\n    </v-toolbar>\n    <v-divider/>\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"goodsList\"\n        :pagination.sync=\"pagination\"\n        :total-items=\"totalGoods\"\n        :loading=\"loading\"\n        class=\"elevation-1\"\n    >\n      <template slot=\"items\" slot-scope=\"props\">\n        <td class=\"text-xs-center\">{{ props.item.id }}</td>\n        <td class=\"text-xs-center\">{{ props.item.name }}</td>\n        <td class=\"text-xs-center\">{{props.item.categoryName}}</td>\n        <td class=\"text-xs-center\">{{ props.item.brandName }}</td>\n        <td class=\"text-xs-center\">{{ props.item.num }}</td>\n        <td class=\"text-xs-center\">{{$format(props.item.oldPrice)}}</td>\n        <td class=\"text-xs-center\">{{$format(props.item.costPrice)}}</td>\n        <td class=\"text-xs-center\">{{props.item.beginTime}}</td>\n        <td class=\"justify-center layout px-0\">\n          <v-tooltip left>\n            <v-btn slot=\"activator\" icon @click=\"editSecKill(props.item)\">\n              <i class=\"el-icon-edit\"/>\n            </v-btn>\n            <span> 修改</span>\n          </v-tooltip>\n          <v-tooltip left>\n            <v-btn icon slot=\"activator\">\n              <i class=\"el-icon-delete\"/>\n            </v-btn>\n            <span> 删除</span>\n          </v-tooltip>\n        </td>\n      </template>\n    </v-data-table>\n    <!--弹出的对话框-->\n    <v-dialog max-width=\"800\" v-model=\"show\" persistent scrollable>\n      <v-card>\n        <!--对话框的标题-->\n        <v-toolbar dense dark color=\"primary\">\n          <v-toolbar-title>{{isEdit ? '修改' : '新增'}}秒杀商品</v-toolbar-title>\n          <v-spacer/>\n          <!--关闭窗口的按钮-->\n          <v-btn icon @click=\"closeWindow\">\n            <v-icon>close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <!--对话框的内容，表单-->\n        <v-card-text class=\"px-3\" style=\"height: 600px\">\n          <seckill-form  :oldGoods=\"oldGoods\" :step=\"step\" @close=\"closeWindow\" :is-edit=\"isEdit\" ref=\"goodsForm\"/>\n        </v-card-text>\n        <!--底部按钮，用来操作步骤线-->\n        <v-card-actions class=\"elevation-10\">\n          <v-flex class=\"xs3 mx-auto\">\n            <v-btn @click=\"previous\" color=\"primary\" :disabled=\"step === 1\">上一步</v-btn>\n            <v-btn @click=\"next\" color=\"primary\" :disabled=\"step === 2\">下一步</v-btn>\n          </v-flex>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-card>\n</template>\n\n<script>\n  // 导入自定义的表单组件\n  import SeckillForm from './SeckillForm'\n\n  export default {\n    name: \"seckill\",\n    data() {\n      return {\n        state: 1,\n        search: '', // 搜索过滤字段\n        totalGoods: 0, // 总条数\n        goodsList: [], // 当前页品牌数据\n        loading: true, // 是否在加载中\n        pagination: {}, // 分页信息\n        headers: [\n          {text: 'skuId', align: 'center', sortable: false, value: 'skuId'},\n          {text: '商品名称', align: 'center', sortable: false, value: 'name'},\n          {text: '商品分类', align: 'center', sortable: false, value: 'categoryName'},\n          {text: '品牌', align: 'center', value: 'brandName', sortable: false,},\n          {text: '数量', align: 'center', value: 'num', sortable: false,},\n          {text: '原价(元)', align: 'center', value: 'oldPrice', sortable: false,},\n          {text: '秒杀价(元)', align: 'center', value: 'oldPrice', sortable: false,},\n          {text: '开始时间', align: 'center', value: 'beginTime', sortable: true,},\n          {text: '操作', align: 'center', sortable: false}\n        ],\n        show: false,// 控制对话框的显示\n        oldGoods: {}, // 即将被编辑的商品信息\n        isEdit: false, // 是否是编辑\n        step: 1, // 子组件中的步骤线索引，默认为1\n      }\n    },\n    mounted() { // 渲染后执行\n      // 查询数据\n      this.getDataFromServer();\n    },\n    watch: {\n      pagination: { // 监视pagination属性的变化\n        deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\n        handler() {\n          // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n          this.getDataFromServer();\n        }\n      },\n      state(){\n        this.getDataFromServer();\n      }\n    },\n    methods: {\n      getDataFromServer() { // 从服务的加载数的方法。\n        // 发起请求\n        this.$http.get(\"/manageSec/findSecKillPage\", {\n          params: {\n            key: this.search, // 搜索条件\n            state: this.state === 0 ? null : this.state,\n            page: this.pagination.page,// 当前页\n            rows: this.pagination.rowsPerPage,// 每页大小\n          }\n        }).then(resp => { // 这里使用箭头函数\n          this.goodsList = resp.data.items;\n          this.totalGoods = resp.data.total;\n          // 完成赋值后，把加载状态赋值为false\n          this.loading = false;\n        }).catch(() => {\n          this.goodsList = [];\n          this.totalGoods = 0;\n          // 完成赋值后，把加载状态赋值为false\n          this.loading = false;\n        })\n      },\n      addGoods() {\n        // 修改标记\n        this.isEdit = false;\n        // 控制弹窗可见：\n        this.show = true;\n        // 把oldBrand变为null\n        this.oldGoods = {};\n      },\n      async editSecKill(oldGoods) {\n        // 修改标记\n        this.isEdit = true;\n        // 控制弹窗可见：\n        this.show = true;\n        // 获取要编辑的goods\n        this.oldGoods = oldGoods;\n      },\n      closeWindow() {\n        console.log(1)\n        // 重新加载数据\n        this.getDataFromServer();\n        // 关闭窗口\n        this.show = false;\n        // 将步骤调整到1\n        this.step = 1;\n      },\n      previous() {\n        if (this.step > 1) {\n          this.step--\n        }\n      },\n      next() {\n        if (this.step < 2 && this.$refs.goodsForm.$refs.basic.validate()) {\n          this.step++\n        }\n      }\n    },\n    components: {\n      SeckillForm\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}